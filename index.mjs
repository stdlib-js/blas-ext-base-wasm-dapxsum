// Copyright (c) 2025 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import s from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@v0.2.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-inherit@v0.2.2-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/strided-base-stride2offset@v0.1.0-esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/wasm-memory@esm/index.mjs";import A from"https://cdn.jsdelivr.net/gh/stdlib-js/wasm-base-arrays2ptrs@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/wasm-base-strided2object@v0.0.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-wasm-memory@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/wasm-module-wrapper@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/error-tools-fmtprodmsg@v0.2.2-esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/string-base-base64-to-uint8array@esm/index.mjs";var a=o("AGFzbQEAAAAADwhkeWxpbmsuMAEEAAAAAAEVA2AFf3x/f38BfGAAAGAEf3x/fwF8Ag8BA2VudgZtZW1vcnkCAAADBQQBAgAAB08DEV9fd2FzbV9jYWxsX2N0b3JzAAAWc3RkbGliX3N0cmlkZWRfZGFweHN1bQABHnN0ZGxpYl9zdHJpZGVkX2RhcHhzdW1fbmRhcnJheQADCrgBBAMAAQscACAAIAEgAiADQQEgAGsgA2xBACADQQBMGxACC4UBAgN8AX8gAEEATARARAAAAAAAAAAADwsgAwRAA0AgACAIRkUEQCAFIAEgAiAEQQN0aisDAKAiBSAGIAYgBaAiB6GgIAYgBSAHoaAgBpkgBZlmG6AhBSAIQQFqIQggAyAEaiEEIAchBgwBCwsgBiAFoA8LIAEgAiAEQQN0aisDAKAgALiiCw4AIAAgASACIAMgBBACCw==");function p(s){if(!(this instanceof p))return new p(s);if(!n(s))throw new TypeError(m("invalid argument. Must provide a WebAssembly memory instance. Value: `%s`.",s));return d.call(this,a,s,{env:{memory:s}}),this}function l(){return this instanceof l?(p.call(this,new i({initial:0})),this):new l}t(p,d),s(p.prototype,"main",(function(s,t,e,i){return this._instance.exports.stdlib_strided_dapxsum(s,t,e,i)})),s(p.prototype,"ndarray",(function(s,t,e,i,A){return this._instance.exports.stdlib_strided_dapxsum_ndarray(s,t,e,i,A)})),t(l,p),s(l.prototype,"main",(function(s,t,i,A){return this.ndarray(s,t,i,A,e(s,A))})),s(l.prototype,"ndarray",(function(s,t,e,i,n){var d;return d=A(this,[r(s,e,i,n)])[0],p.prototype.ndarray.call(this,s,t,d.ptr,d.stride,d.offset)}));var h=new l;h.initializeSync(),s(h,"Module",p);export{p as Module,h as default};
//# sourceMappingURL=index.mjs.map
